@page "/"
@using HomeSHS.Components
@using HomeSHS.Components.Helpers
@using HomeSHS.Components.SettingsTabs
@using SHC.Entities
@using SHC.Services
@inject IPageRefresher PageRefresher
@inject IUserService UserService

<div class="main-container">
    
    @if (simulationContext.House == null)
    {
        <div>
            <FileUpload />
        </div>
    }
    else
    {
        <div class="first-floor-container">
            <div>
                <SimulatorSettings />
            </div>
            <div class="home-view-container">
                <HouseLayoutRender />
            </div>
        </div>
        <button class="button-goto" type="button" onclick="document.getElementById('output-console').scrollIntoView({behavior:'smooth'})">Go to output console</button>
        <div id="output-console" class="second-floor-container">
            <button class="button-back" type="button" onclick="document.getElementById('#').scrollIntoView({behavior:'smooth'})">Back</button>
            <OutputConsoleComponent />
        </div>
    }
</div>

@code {
    SimulationContext simulationContext = SimulationContext.GetInstance();

    protected async override Task OnInitializedAsync()
    {
        simulationContext.Users = (List<VirtualUser>)await UserService.GetAllUsers();
        await base.OnInitializedAsync();
        PageRefresher.IndexRefreshRequested += RefreshIndex;
    }

    private void RefreshIndex()
    {
        InvokeAsync(() =>
            {
                StateHasChanged();
            });
    }
}